!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var i=function(e,t){return function(n){return e+n*t}},r=function(e,t){return function(n){return e+n*n*t}},o=[{uuid:"uuid-lemon",name:"Lemon",productionTime:1e3,revenueFn:i(1,.8),upgradeCostFn:r(1,.6),level:1,purchased:!0,price:0,hasManager:!1,managerPrice:100},{uuid:"uuid-ice-cream",name:"Ice cream",productionTime:3e3,revenueFn:i(10,5),upgradeCostFn:r(10,.6),level:1,purchased:!1,price:1,hasManager:!1,managerPrice:500},{uuid:"uuid-bicycle",name:"Bicycle",productionTime:1e4,revenueFn:i(20,10),upgradeCostFn:r(15,.6),level:1,purchased:!1,price:10,hasManager:!1,managerPrice:2e3},{uuid:"uuid-motor-bike",name:"Motor Bike",productionTime:36e5,revenueFn:i(30,15),upgradeCostFn:r(20,1),level:1,purchased:!1,price:50,hasManager:!1,managerPrice:4e3},{uuid:"uuid-car",name:"Car",productionTime:18e6,revenueFn:i(50,25),upgradeCostFn:r(40,2),level:1,purchased:!1,price:100,hasManager:!1,managerPrice:8e3}],a=function(){return(a=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},u="capitalism-service-local-storage-key",c=function(){function e(){var e=this;this._itemConfigs=[],this._itemConfigListenersMap={},this._notifyItemConfigUpdated=function(t){e._itemConfigListenersMap[t.uuid]&&e._itemConfigListenersMap[t.uuid].forEach((function(e){e(t)}))},this._loadData=function(){var t=localStorage.getItem(u);if(t){var n=JSON.parse(t),i=[],r=0;n.itemConfigs.forEach((function(e){var t=o.find((function(t){return t.uuid===e.uuid})),u=a(a(a({},t),e),{productionStartAt:null});if(e.productionStartAt){u.productionStartAt=new Date(e.productionStartAt);var c=(new Date).getTime()-u.productionStartAt.getTime();if(u.hasManager){var s=Math.floor(c/u.productionTime);r+=s*u.revenueFn(u.level)}else{c>=u.productionTime&&u.productionStartAt.getTime()+u.productionTime>new Date(n.savedAt).getTime()&&(r+=u.revenueFn(u.level))}}i.push(u)})),e._itemConfigs=i,e._money=n.money+r}},this._saveData=function(){var t={itemConfigs:e._itemConfigs.map((function(e){return{uuid:e.uuid,level:e.level,purchased:e.purchased,hasManager:e.hasManager,productionStartAt:e.productionStartAt?e.productionStartAt.toISOString():null}})),money:e._money,savedAt:new Date};localStorage.setItem(u,JSON.stringify(t))},this.loadItemConfigs=function(){return e._itemConfigs},this.loadMoney=function(){return e._money},this.updateMoney=function(t){e._money=t},this.updateItemProducingTime=function(t,n){void 0===n&&(n=new Date),e._itemConfigs.find((function(e){return e.uuid===t})).productionStartAt=n},this.getItemConfigByUuid=function(t){var n=e._itemConfigs.find((function(e){return e.uuid===t}));return a({},n)},this.subscribeItemConfig=function(t,n){e._itemConfigListenersMap[t]||(e._itemConfigListenersMap[t]=[]),e._itemConfigListenersMap[t].push(n)},this.purchaseItem=function(t){var n=e._itemConfigs.find((function(e){return e.uuid===t}));n.purchased=!0,e._notifyItemConfigUpdated(n)},this.upgradeItem=function(t){e._itemConfigs.find((function(e){return e.uuid===t})).level+=1},this.hireManager=function(t){var n=e._itemConfigs.find((function(e){return e.uuid===t}));if(!n)throw new Error("There is no item config for "+n.name);if(n.hasManager)throw new Error("Already have a manager for "+n.name);n.hasManager=!0,e._notifyItemConfigUpdated(n)},this._itemConfigs=o,this._money=1e3,this._loadData(),window.onbeforeunload=function(){e._saveData()}}return e.getInstance=function(){return e._instance||(e._instance=new e),e._instance},e}(),s=function(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function u(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((i=i.apply(e,t||[])).next())}))},l=function(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},h=function(){function e(e){var t=this;this._moneyListener=[],this._lock=!1,this._notifyMoneyChange=function(){t._capitalismService.updateMoney(t._currentMoney),t._moneyListener.forEach((function(e){return e(t._currentMoney)}))},this.getMoney=function(){return t._currentMoney.toFixed(2)},this.onAddMoney=function(e){t._currentMoney+=e,t._notifyMoneyChange()},this.subscribeMoney=function(e){t._moneyListener.push(e)},this.chargeMoney=function(e){return s(t,void 0,void 0,(function(){return l(this,(function(t){return this._lock?[2,!1]:(this._lock=!0,this._currentMoney<e?(this._lock=!1,[2,!1]):(this._currentMoney-=e,this._lock=!1,this._notifyMoneyChange(),[2,!0]))}))}))},this._capitalismService=c.getInstance(),this._currentMoney=this._capitalismService.loadMoney()}return e.getInstance=function(){return e._instance||(e._instance=new e(1e3)),e._instance},e}(),f=function(){return(f=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},d=function(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function u(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((i=i.apply(e,t||[])).next())}))},m=function(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},p=function(){function e(e,t,n){var i=this;this._isProducing=!1,this._currentProducing=null,this.updateConfig=function(e){if(i._itemConfig.name!==e.name)throw new Error("Service updates with different item config");i._itemConfig=e,i.renderRevenueAndUpgradeCost(),e.hasManager&&i.initializeManager()},this.initializeManager=function(){return d(i,void 0,void 0,(function(){var e,t,n,i=this;return m(this,(function(r){switch(r.label){case 0:return this._titleElem.onclick=null,this._titleElem.innerText=this._itemConfig.name+" (has manager)",this._itemConfig=this._capitalismService.getItemConfigByUuid(this._itemConfig.uuid),e=new Date,t=0,this._currentProducing?[4,this._currentProducing]:[3,2];case 1:return r.sent(),[3,3];case 2:this._itemConfig.productionStartAt&&this._itemConfig.productionStartAt.getTime()+this._itemConfig.productionTime>e.getTime()&&(t=e.getTime()-this._itemConfig.productionStartAt.getTime()),r.label=3;case 3:return(n=function(){return d(i,void 0,void 0,(function(){return m(this,(function(e){switch(e.label){case 0:return[4,this._produceItem(t)];case 1:return e.sent(),t=0,[2,n()]}}))}))})(),[2]}}))}))},this._produceItem=function(e){return void 0===e&&(e=0),d(i,void 0,void 0,(function(){var t=this;return m(this,(function(n){return[2,new Promise((function(n){if(!t._isProducing){t._isProducing=!0,0===e&&t._capitalismService.updateItemProducingTime(t._itemConfig.uuid),t._progressElem.innerText=(e/1e3).toFixed(1)+" s";var i=setInterval((function(){e+=100,t._progressElem.innerText=(e/1e3).toFixed(1)+" s"}),100);setTimeout((function(){clearInterval(i),t._progressElem.innerText="",t._wallet.onAddMoney(t._revenue),t._isProducing=!1,n()}),t._itemConfig.productionTime-e)}}))]}))}))},this.handleUpgrade=function(){return d(i,void 0,void 0,(function(){return m(this,(function(e){switch(e.label){case 0:return[4,this._wallet.chargeMoney(this._upgradeCost)];case 1:return e.sent()?(this._capitalismService.upgradeItem(this._itemConfig.uuid),this._itemConfig=f({},this._capitalismService.getItemConfigByUuid(this._itemConfig.uuid)),this.renderRevenueAndUpgradeCost(),this._revenue=this._itemConfig.revenueFn(this._itemConfig.level),this._upgradeCost=this._itemConfig.upgradeCostFn(this._itemConfig.level),[2]):[2]}}))}))},this.handleProduce=function(){i._currentProducing=i._produceItem()},this.getElement=function(){return i._element},this._itemConfig=f({},e),this._wallet=t,this._revenue=e.revenueFn(e.level),this._upgradeCost=e.upgradeCostFn(e.level),this._capitalismService=n,this._capitalismService.subscribeItemConfig(e.uuid,this.updateConfig),this._element=document.createElement("div"),this._element.className="item",this._element.id=this._itemConfig.name,this._titleElem=document.createElement("div"),this._titleElem.className="name",this._titleElem.innerText=this._itemConfig.name,this._titleElem.onclick=this.handleProduce;var r=document.createElement("div");r.className="production-time",r.innerText="take: "+(this._itemConfig.productionTime/1e3).toFixed(0)+" s",this._revenueElem=document.createElement("div"),this._revenueElem.className="revenue",this._upgradeCostElem=document.createElement("div"),this._upgradeCostElem.className="upgrade",this._upgradeCostElem.onclick=this.handleUpgrade,this._progressElem=document.createElement("div"),this._progressElem.className="progress",this._element.appendChild(this._titleElem),this._element.appendChild(this._revenueElem),this._element.appendChild(r),this._element.appendChild(this._upgradeCostElem),this._element.appendChild(this._progressElem),this._itemConfig.hasManager&&this.initializeManager(),this.renderRevenueAndUpgradeCost()}return e.prototype.renderRevenueAndUpgradeCost=function(){this._upgradeCostElem.innerText="upgrade: "+this._upgradeCost.toFixed(2),this._revenueElem.innerText="$ "+this._revenue.toFixed(2)},e}(),g=function(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function u(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((i=i.apply(e,t||[])).next())}))},_=function(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},v=function(e,t,n){var i=this;this._isPurchasing=!1,this.handlePurchase=function(){return g(i,void 0,void 0,(function(){return _(this,(function(e){switch(e.label){case 0:return this._isPurchasing?[2]:(this._isPurchasing=!0,[4,this._wallet.chargeMoney(this._itemConfig.price)]);case 1:return e.sent()?(this._isPurchasing=!1,this._onPurchased(),[2]):(this._isPurchasing=!1,[2])}}))}))},this.getElement=function(){return i._element},this._itemConfig=e,this._wallet=t,this._onPurchased=n,this._element=document.createElement("div"),this._element.className="item",this._element.onclick=this.handlePurchase;var r=document.createElement("div");r.className="purchase-text",r.innerText="purchase "+e.name+" for "+e.price.toFixed(2),this._element.appendChild(r)},y=function(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function u(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((i=i.apply(e,t||[])).next())}))},C=function(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},b=function(e,t,n){var i=this;this.appendManagerElements=function(){i._capitalismService.loadItemConfigs().forEach((function(e){var t=document.createElement("div");t.className="hire-manager",e.hasManager?t.innerText="Hired Manager for "+e.name:t.innerText="Manager for "+e.name+" (cost $"+e.managerPrice+")",t.onclick=function(){return y(i,void 0,void 0,(function(){return C(this,(function(n){switch(n.label){case 0:return e.purchased?[4,this._wallet.chargeMoney(e.managerPrice)]:(alert("Please purchase item first"),[2]);case 1:return n.sent()?(this._capitalismService.hireManager(e.uuid),t.onclick=null,t.className+=" purchased",t.innerText="Hired Manager for "+e.name,[2]):[2]}}))}))},i._element.appendChild(t)}))},this.getElement=function(){return i._element},this._capitalismService=e,this._wallet=t,this._element=document.createElement("div"),this._element.className="hire-manager-wrapper";var r=document.createElement("button");r.innerText="Close",r.onclick=n,this._element.appendChild(r),this.appendManagerElements()};!function(){console.log("==== Initializing start ====");var e={},t=h.getInstance(),n=c.getInstance(),i=document.getElementById("app");if(!i)throw new Error("There is no #app element to attach game elements");var r=document.createElement("div");r.className="total money",r.innerText="total: "+t.getMoney(),i.appendChild(r),t.subscribeMoney((function(e){r.innerText="total: "+e.toFixed(2)}));var o=document.createElement("div");i.appendChild(o),n.loadItemConfigs().forEach((function(i,r){var a={config:i,order:r};i.purchased?(a.item=new p(i,t,n),o.appendChild(a.item.getElement())):(a.itemPurchase=new v(i,t,(function(){n.purchaseItem(i.uuid),e[i.uuid].item=new p(i,t,n),o.replaceChild(e[i.uuid].item.getElement(),o.childNodes[r])})),o.appendChild(a.itemPurchase.getElement())),e[i.uuid]=a}));var a=document.createElement("button");a.className="hire-manager-button",a.innerText="Hire Manager",a.onclick=function(){var e,r=new b(n,t,(function(){i.removeChild(e)}));e=r.getElement(),i.appendChild(e)},i.appendChild(a),console.log("==== Initialized ====")}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,